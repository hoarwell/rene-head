{"version":3,"sources":["rene/1.png","rene/2.png","rene/3.png","rene/4.png","App.js","index.js"],"names":["App","countNum","useState","detecting","setDetecting","support","setSupport","twoRef","useRef","navigator","getUserMedia","webkitGetUserMedia","mozGetUserMedia","msGetUserMedia","mediaDevices","video","audio","then","stream","ctx","AudioContext","mic","createMediaStreamSource","analyser","createAnalyser","connect","play","array","Uint8Array","frequencyBinCount","values","getByteFrequencyData","length","i","average","current","style","width","Math","round","console","log","requestAnimationFrame","catch","err","alert","useEffect","className","src","one","alt","ref","two","three","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2KAAe,MAA0B,8BCA1B,MAA0B,8BCA1B,MAA0B,8B,GCA1B,I,YC4GAA,MApGf,WACE,IAIIC,EAJJ,EAAkCC,oBAAS,GAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAA8BF,mBAAS,IAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KACMC,EAASC,mBA6Ef,OAzEAC,UAAUC,aAAiBD,UAAUC,cACjCD,UAAUE,oBACVF,UAAUG,iBACVH,UAAUI,eAiBXR,EACaI,UAAUK,aAAaJ,aANrB,CACdK,OAAQ,EACRC,OAAQ,IAKFC,MAKV,SAAkBC,GACd,IAAIC,EAAM,IAAIC,aACVC,EAAMF,EAAIG,wBAAwBJ,GAClCK,EAAWJ,EAAIK,iBAKnB,GAHAH,EAAII,QAAQF,GACZtB,EAAW,EAERE,EAAU,EACX,SAASuB,IACP,IAAIC,EAAQ,IAAIC,WAAWL,EAASM,mBAChCC,EAAS,EAEbP,EAASQ,qBAAqBJ,GAI9B,IAFA,IAAIK,EAASL,EAAMK,OAEVC,EAAI,EAAGA,EAAID,EAAQC,IACxBH,GAAWH,EAAMM,GAGrB,IAAIC,EAAUJ,EAASE,EAEpBE,EAAU,KACT3B,EAAO4B,QAAQC,MAAMC,MAArB,UAAgCC,KAAKC,MAAML,EAAU,IAArD,KACAjC,GAAsB,EACtBuC,QAAQC,IAAIH,KAAKC,MAAML,GAAUjC,KAEnCM,EAAO4B,QAAQC,MAAMC,MAArB,MACApC,EAAW,GAEbyC,sBAAsBhB,IAExBA,OAtCmBiB,OAAM,SAAAC,GAAG,OAAIJ,QAAQC,IAAIG,MAEhDC,MAAM,yGAwCRC,qBAAU,WACLvC,EAAO4B,QACR/B,GAAa,GAEbA,GAAa,GA9DXK,WAAaA,UAAUK,cAAgBL,UAAUK,aAAaJ,cAChEJ,GAAW,GACXkC,QAAQC,IAAI,aAEZnC,GAAW,GACXkC,QAAQC,IAAI,kBA4Db,IAGD,qBAAKM,UAAU,MAAf,SACE,sBAAKA,UAAY,YAAjB,UACE,qBAAKA,UAAY,MAAjB,SACE,qBAAKC,IAAQC,EAAMC,IAAM,UAE3B,qBAAKH,UAAY,MAAMI,IAAQ5C,EAA/B,SACE,qBAAKyC,IAAQI,EAAMF,IAAM,UAE3B,qBAAKH,UAAY,QAAjB,SACE,qBAAKC,IAAQK,EAAQH,IAAM,kBC7FrCI,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.8779e717.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/1.95522ba4.png\";","export default __webpack_public_path__ + \"static/media/2.acab4988.png\";","export default __webpack_public_path__ + \"static/media/3.4ae16072.png\";","export default __webpack_public_path__ + \"static/media/4.67aadf65.png\";","import React, { useState, useEffect, useRef } from 'react';\nimport one from './rene/1.png';\nimport two from './rene/2.png';\nimport three from './rene/3.png';\nimport four from './rene/4.png';\n\nimport './App.css';\n\nfunction App() {\n  const [detecting, setDetecting] = useState(false);\n  const [support, setSupport] = useState(\"\");\n  const twoRef = useRef();\n\n  let countNum;\n\n  navigator.getUserMedia = ( navigator.getUserMedia ||\n      navigator.webkitGetUserMedia ||\n      navigator.mozGetUserMedia ||\n      navigator.msGetUserMedia );\n\n  const askSupport = () => {\n    if (navigator && navigator.mediaDevices && navigator.mediaDevices.getUserMedia) { \n      setSupport(true);\n      console.log('support')\n    } else {\n      setSupport(false);\n      console.log(\"not support\")\n    }\n  }\n\n  let constraints = { \n      video : false, \n      audio : true \n  }\n\n  if(support){\n    let promise = navigator.mediaDevices.getUserMedia(constraints);\n    promise.then(callback).catch(err => console.log(err));\n  } else {\n    alert('지금 쓰고 계시는 거 마이크 안먹힙니다')\n  }\n\n  function callback(stream) {\n      let ctx = new AudioContext();\n      let mic = ctx.createMediaStreamSource(stream);\n      let analyser = ctx.createAnalyser();\n      \n      mic.connect(analyser);\n      countNum = 0;\n\n      if(detecting){\n        function play() {\n          let array = new Uint8Array(analyser.frequencyBinCount);\n          let values = 0;\n          \n          analyser.getByteFrequencyData(array);\n\n          let length = array.length;\n\n          for (let i = 0; i < length; i++) {\n              values += (array[i]);\n          }\n\n          var average = values / length;\n\n          if(average > 100){\n              twoRef.current.style.width = `${Math.round(average - 80)}%`;\n              countNum = countNum + 1;\n              console.log(Math.round(average), countNum);\n          } else {\n            twoRef.current.style.width = `10%`;\n            countNum = 0;\n          }\n          requestAnimationFrame(play);\n        }\n        play();\n      }\n  }\n\n  useEffect(() => {\n    if(twoRef.current){\n      setDetecting(true);\n    } else {\n      setDetecting(false);\n    }\n    askSupport();\n  }, [])\n\n  return (\n    <div className=\"App\">\n      <div className = \"container\">\n        <div className = \"one\">\n          <img src = { one } alt = \"one\" />\n        </div>\n        <div className = \"two\" ref = { twoRef }>\n          <img src = { two } alt = \"two\" />\n        </div>\n        <div className = \"three\">\n          <img src = { three } alt = \"three\" />\n        </div>\n        {/* <div className = \"four\">\n          <img src = { four } alt = \"four\" />\n        </div> */}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}