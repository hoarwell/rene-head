{"version":3,"sources":["rene/1.png","rene/2.png","rene/3.png","rene/4.png","App.js","index.js"],"names":["App","countNum","useState","detecting","setDetecting","support","setSupport","twoRef","useRef","faceRef","wrapperRef","navigator","getUserMedia","webkitGetUserMedia","mozGetUserMedia","msGetUserMedia","mediaDevices","video","audio","then","stream","ctx","AudioContext","mic","createMediaStreamSource","analyser","createAnalyser","connect","play","array","Uint8Array","frequencyBinCount","values","getByteFrequencyData","length","i","average","current","style","width","Math","round","top","console","log","animation","requestAnimationFrame","catch","err","useEffect","className","src","one","alt","ref","two","three","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bcc41381.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/1.95522ba4.png\";","export default __webpack_public_path__ + \"static/media/2.acab4988.png\";","export default __webpack_public_path__ + \"static/media/3.4ae16072.png\";","export default __webpack_public_path__ + \"static/media/4.67aadf65.png\";","import React, { useState, useEffect, useRef } from 'react';\nimport one from './rene/1.png';\nimport two from './rene/2.png';\nimport three from './rene/3.png';\nimport four from './rene/4.png';\n\nimport './App.css';\n\nfunction App() {\n  const [detecting, setDetecting] = useState(false);\n  const [support, setSupport] = useState(\"\");\n  const twoRef = useRef();\n  const faceRef = useRef();\n  const wrapperRef = useRef();\n\n  let countNum;\n\n  navigator.getUserMedia = ( navigator.getUserMedia ||\n      navigator.webkitGetUserMedia ||\n      navigator.mozGetUserMedia ||\n      navigator.msGetUserMedia );\n\n  const askSupport = () => {\n    if (navigator && navigator.mediaDevices && navigator.mediaDevices.getUserMedia) { \n      setSupport(true);\n      console.log('support')\n    } else {\n      setSupport(false);\n      console.log(\"not support\")\n    }\n  }\n\n  let constraints = { \n      video : false, \n      audio : true \n  }\n\n  if(support){\n    let promise = navigator.mediaDevices.getUserMedia(constraints);\n    promise.then(callback).catch(err => console.log(err));\n  }\n\n  function callback(stream) {\n      let ctx = new AudioContext();\n      let mic = ctx.createMediaStreamSource(stream);\n      let analyser = ctx.createAnalyser();\n      \n      mic.connect(analyser);\n\n      countNum = 0;\n\n      if(detecting){\n        function play() {\n          let array = new Uint8Array(analyser.frequencyBinCount);\n          let values = 0;\n          \n          analyser.getByteFrequencyData(array);\n\n          let length = array.length;\n\n          for (let i = 0; i < length; i++) {\n              values += (array[i]);\n          }\n\n          var average = values / length;\n\n          if(average > 10){\n              countNum = countNum + 1; \n              if (countNum < 100 && countNum >= 0) {\n                wrapperRef.current.style.width = (average <= 15) ? `${Math.round(average)}%` : \"10%\";\n              } else if(countNum < 300 && countNum >= 100) {\n                wrapperRef.current.style.width = (average <= 30) ? `${Math.round(average)}%` : \"15%\"; \n                wrapperRef.current.style.width = \"15%\";\n                faceRef.current.style.top = \"15%\";\n                faceRef.current.style.width = \"35%\";\n                console.log('15');\n              } else if ( countNum < 500 && countNum >= 300) {\n                wrapperRef.current.style.width = (average <= 50) ? `${Math.round(average)}%` : \"30%\"; \n                wrapperRef.current.style.width = \"30%\";\n                faceRef.current.style.top = \"5%\";\n                faceRef.current.style.width = \"25%\";\n                console.log('30');\n              } else if ( countNum < 700 && countNum >= 500 ) {\n                // animation 추가 \n                wrapperRef.current.style.animation = \"y-axis 3s ease-in-out\";\n                twoRef.current.style.animation = \"x-axis 3s linear\";\n              }\n          } else { // 초기화\n              wrapperRef.current.style.width = \"10%\";\n              faceRef.current.style.top = \"25%\";\n              faceRef.current.style.width = \"47%\";\n              countNum = 0;\n              wrapperRef.current.style.animation = \"none\";\n              twoRef.current.style.animation = \"none\";\n          }\n          requestAnimationFrame(play);\n        }\n        play();\n      }\n  }\n\n  useEffect(() => {\n    if(twoRef.current){\n      setDetecting(true);\n    } else {\n      setDetecting(false);\n    }\n    askSupport();\n  }, [])\n\n  return (\n    <div className=\"App\">\n      <div className = \"container\">\n        <div className = \"one\">\n          <img src = { one } alt = \"one\" />\n        </div>\n        <div className = \"wrapper\" ref = { wrapperRef }>\n          <div className = \"two\" ref = { twoRef }>\n            <img className = \"head\" src = { two } alt = \"two\" />\n            <img className = \"face\" ref = { faceRef } src = { three } alt = \"three\" />\n          </div>\n        </div>\n        {/* <div className = \"four\">\n          <img src = { four } alt = \"four\" />\n        </div> */}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}